
# File is used by sprigboot
#server.contextPath=/
#server.port=9191
server.port=9190
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/webui/
#
#spring.banner.location=classpath:banner_txt.txt
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.jpa.hibernate.naming.strategy= = org.hibernate.cfg.ImprovedNamingStrategy

#Temporary disable security to enable it remove this
#security.ignored=/**

#springfox.documentation.swagger.v2.path=/api-docs
spring.jackson.date-format=yyyy-MM-dd

#LOGGER
logging.level.org.springframework=info
logging.level.com.realnet=debug
logging.level.io.swagger.models.parameters.AbstractSerializableParameter=error
#logging.config=src/main/resources/log4j.properties

#LOGGER FILE PROPERTIES
#logging.file.path=logs
#logging.file.name=app-log.log
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#%d{yyyy-MM-dd HH:mm:ss} [%thread] %level %logger %msg %n
#logging.pattern.rolling-file-name=app-%d{yyyy-MM-dd}.%i.log
#logging.file.max-size=10MB
#spring.datasource.url=jdbc:sqlite:memory:myDb?cache=shared
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.jpa.database-platform=com.services.registration.dialect.SQLiteDialect
#spring.jpa.hibernate.ddl-auto=update
#####H2222
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.h2.console.settings.web-allow-others=true


spring.datasource.url=jdbc:mysql://realnet-1.mysql.database.azure.com:3306/cns_reg
spring.datasource.username=realnet
spring.datasource.password=ris@1234
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# ****** H2 In Memort Database Connection Info  *******
#spring.h2.console.enabled=true
#spring.datasource.platform=h2
#spring.datasource.url=jdbc:h2:mem:demo;MODE=MYSQL;DB_CLOSE_DELAY=-1;
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.initialize=true
#spring.jpa.hibernate.ddl-auto=none

#spring.datasource.continue-on-error=false

# **** MY SQL DATABASE CONNECTION ****
#spring.datasource.url=jdbc:mysql://65.1.153.7:3306/cnsdb
#spring.datasource.username=cnsdev
#spring.datasource.password=cnsdev
#spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
#

#################
#spring.datasource.url=jdbc:mysql://localhost:3306/dbdumpdummy   
#spring.datasource.username = root
#spring.datasource.password = root
#spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.datasource.url=jdbc:sqlite:myDb

#spring.datasource.url=jdbc:sqlite:memory:dbdumpdummy?cache=shared
#spring.datasource.driver-class-name=org.sqlite.JDBC
#spring.datasource.username=
#spring.datasource.password=
#spring.jpa.database-platform=com.services.registration.dialect.SQLiteDialect


#data tranction
#spring.datasource.url=jdbc:mysql://localhost:3306/rel_net_rest?sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false

#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# -- SQL debug --
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

#***** MAIL SENDER
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=realitmailsender@gmail.com
spring.mail.password=epnmhzsccotnyozf
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# JACKSON
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#
#
#spring.mail.properties.mail.smtp.auth = true
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.smtp.socketFactory.fallback = false

#******* MULTIPART RESOLVER

#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=100MB
#spring.servlet.multipart.max-request-size=100MB

#***************OAUTH2 SOCIAL LOGIN *********
# Social login provider props
    #spring.security.oauth2.client.registration.google.clientId=437023664181-0lm0ipgip3qbhga4nd7o4128jv4g2nv9.apps.googleusercontent.com
    #spring.security.oauth2.client.registration.google.clientSecret=I1HPyUqdJ9UONu45W1_wwfww
    #spring.security.oauth2.client.registration.google.scope=profile, email


#spring.security.oauth2.client.registration.linkedin.clientId=<your-client-id>
#spring.security.oauth2.client.registration.linkedin.clientSecret=<your-client-secret>
#spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
#spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile, r_emailaddress
#spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.linkedin.client-name=Linkedin
#spring.security.oauth2.client.registration.linkedin.provider=linkedin
#spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
#spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
#spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
#spring.security.oauth2.client.provider.linkedin.user-name-attribute=id
#linkedin.email-address-uri=https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))
#app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
#app.auth.tokenExpirationMsec=864000000
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the frontend client in the /oauth2/authorization request.
# We're not using cookies because they won't work well in mobile clients.
#karam
app.oauth2.authorizedRedirectUris=http://localhost:8081/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect

projectPath=C:/Users/nkati/Desktop/New folder/New folder/Registration
#projectPath=D:/Office Project/BACKUP PROJECT/Angular-SpringBoot-REST-JWT-master
#ANGULAR PROJECT PATH
angularProjectPath=C:/Users/Karam/git/cns-m-t/springboot/webui1


#google auth login
##karam

spring.security.oauth2.client.registration.google.client-id=536643052568-htt8g5sqt92q89rtj0jd0ielcg4tnou1.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
